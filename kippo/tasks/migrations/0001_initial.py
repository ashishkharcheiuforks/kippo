# Generated by Django 2.2.3 on 2019-07-28 03:48

from django.conf import settings
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('projects', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='KippoTask',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_datetime', models.DateTimeField(auto_now_add=True)),
                ('updated_datetime', models.DateTimeField(auto_now=True)),
                ('closed_datetime', models.DateTimeField(editable=False, null=True)),
                ('title', models.CharField(help_text='KippoTask Title', max_length=256)),
                ('category', models.CharField(max_length=256)),
                ('is_closed', models.BooleanField(default=False)),
                ('github_issue_api_url', models.URLField(blank=True, null=True)),
                ('github_issue_html_url', models.URLField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('assignee', models.ForeignKey(blank=True, help_text='Assigned to User', null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='tasks_kippotask_created_by', to=settings.AUTH_USER_MODEL)),
                ('depends_on', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='tasks.KippoTask')),
                ('milestone', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='kippotask_milestone', to='projects.KippoMilestone')),
                ('project', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='kippotask_project', to='projects.KippoProject')),
                ('updated_by', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='tasks_kippotask_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('project', 'title', 'assignee')},
            },
        ),
        migrations.CreateModel(
            name='KippoTaskStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_datetime', models.DateTimeField(auto_now_add=True)),
                ('updated_datetime', models.DateTimeField(auto_now=True)),
                ('closed_datetime', models.DateTimeField(editable=False, null=True)),
                ('state', models.CharField(db_index=True, help_text='Populated by the Github Organizational Project column the task exists in', max_length=56, null=True)),
                ('state_priority', models.PositiveSmallIntegerField(blank=True, default=0, help_text='The priority of the task within the given state (column) [smaller is better]', null=True)),
                ('effort_date', models.DateField(db_index=True, default=django.utils.timezone.now, help_text='Date that effort spent occurred on.')),
                ('hours_spent', models.FloatField(blank=True, help_text='Hours spent on related KippoTask since last update', null=True)),
                ('minimum_estimate_days', models.FloatField(blank=True, help_text='Minimum number of days needed to complete the related KippoTask.', null=True)),
                ('estimate_days', models.FloatField(blank=True, help_text='Expected number of days needed to complete the related KippoTask.', null=True)),
                ('maximum_estimate_days', models.FloatField(blank=True, help_text='Maximum number of days needed to complete the related KippoTask', null=True)),
                ('tags', django.contrib.postgres.fields.jsonb.JSONField(blank=True, help_text='Any tags related to the current task status', null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('created_by', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='tasks_kippotaskstatus_created_by', to=settings.AUTH_USER_MODEL)),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tasks.KippoTask')),
                ('updated_by', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='tasks_kippotaskstatus_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-effort_date',),
                'get_latest_by': 'effort_date',
                'unique_together': {('task', 'effort_date')},
            },
        ),
    ]
