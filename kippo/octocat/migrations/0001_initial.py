# Generated by Django 2.1.1 on 2018-08-31 22:24

from django.conf import settings
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('projects', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='GithubAccessToken',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_datetime', models.DateTimeField(auto_now_add=True)),
                ('updated_datetime', models.DateTimeField(auto_now=True)),
                ('closed_datetime', models.DateTimeField(editable=False, null=True)),
                ('token', models.CharField(help_text='Github Personal Token for accessing Github Projects, Milestones, Repositories and Issues', max_length=40)),
                ('created_by', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='octocat_githubaccesstoken_created_by', to=settings.AUTH_USER_MODEL)),
                ('organization', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='accounts.KippoOrganization')),
                ('updated_by', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='octocat_githubaccesstoken_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GithubMilestone',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_datetime', models.DateTimeField(auto_now_add=True)),
                ('updated_datetime', models.DateTimeField(auto_now=True)),
                ('closed_datetime', models.DateTimeField(editable=False, null=True)),
                ('number', models.PositiveIntegerField(editable=False, help_text='Github Milestone Number (needed for update/delete on github)', verbose_name='Github Milestone Number')),
                ('api_url', models.URLField(blank=True, default=None, help_text='Github Repository Milestone API URL', null=True, verbose_name='Github Milestone API URL')),
                ('html_url', models.URLField(blank=True, default=None, help_text='Github Repository Milestone HTML URL', null=True, verbose_name='Github Milestone HTML URL')),
                ('created_by', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='octocat_githubmilestone_created_by', to=settings.AUTH_USER_MODEL)),
                ('milestone', models.ForeignKey(help_text='Related Kippo Milestone', on_delete=django.db.models.deletion.CASCADE, to='projects.KippoMilestone', verbose_name='Kippo Milestone')),
            ],
        ),
        migrations.CreateModel(
            name='GithubRepository',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_datetime', models.DateTimeField(auto_now_add=True)),
                ('updated_datetime', models.DateTimeField(auto_now=True)),
                ('closed_datetime', models.DateTimeField(editable=False, null=True)),
                ('name', models.CharField(max_length=100, verbose_name='Github Repository Name')),
                ('api_url', models.URLField(help_text='Github Repository API URL')),
                ('html_url', models.URLField(help_text='Github Repository HTML URL')),
                ('created_by', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='octocat_githubrepository_created_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'github repositories',
            },
        ),
        migrations.CreateModel(
            name='GithubRepositoryLabelSet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Reference Name For LabelSet', max_length=120)),
                ('labels', django.contrib.postgres.fields.jsonb.JSONField(help_text='Labels defined in the format: [{"name": "category:X", "description": "", "color": "AED6F1"},]')),
                ('created_datetime', models.DateTimeField(auto_now_add=True)),
                ('updated_datetime', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.AddField(
            model_name='githubrepository',
            name='label_set',
            field=models.ForeignKey(blank=True, help_text='Github Repository LabelSet', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='octocat.GithubRepositoryLabelSet'),
        ),
        migrations.AddField(
            model_name='githubrepository',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.KippoProject'),
        ),
        migrations.AddField(
            model_name='githubrepository',
            name='updated_by',
            field=models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='octocat_githubrepository_updated_by', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='githubmilestone',
            name='repository',
            field=models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='octocat.GithubRepository'),
        ),
        migrations.AddField(
            model_name='githubmilestone',
            name='updated_by',
            field=models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='octocat_githubmilestone_updated_by', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterUniqueTogether(
            name='githubmilestone',
            unique_together={('milestone', 'repository', 'number')},
        ),
    ]
